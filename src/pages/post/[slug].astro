---
import { getCollection, getEntryBySlug, type CollectionEntry } from "astro:content";
import PageLayout from "~/layouts/PageLayout.astro";
import PageMeta from "~/components/PageMeta.astro";

export async function getStaticPaths() {
	const posts = await getCollection("posts");

	return posts.map((post: CollectionEntry<"posts">) => {
		return { params: { slug: post.slug } };
	});
}

type Heading = { text: string; depth: number; slug: string };

const { slug } = Astro.params;
const entry = await getEntryBySlug("posts", slug);
const { data } = entry;
const { Content, headings } = await entry.render();

const shownHeadings = headings.filter((h: Heading) => h.depth === 2 || h.depth === 3);

const formattedDate =
	data.date.getFullYear() + "-" + String(data.date.getMonth() + 1).padStart(2, "0") + "-" + String(data.date.getDate()).padStart(2, "0");
---

<PageLayout>
	<PageMeta title={data.title} description={data.description} slot="meta" />
	<Fragment slot="main">
		<time datetime={data.date.toISOString()} class="order-first flex items-center">
			<span class="mr-2 h-4 w-0.5 rounded-full bg-mauve"></span>
			<span class="text-overlay w-24 font-light">{formattedDate}</span>
		</time>
		<h1 class="mt-2 text-xl font-semibold tracking-tight">{data.title}</h1>
		{
			shownHeadings.length > 2 && (
				<nav class="mt-8 rounded-xl border-4 border-lavender px-8 py-6">
					<h2 class="text-2xl font-bold">In this post</h2>
					<ol class="mt-5 space-y-2">
						{shownHeadings.map((h: Heading) => {
							const className = "text-subtext text-lg hover:underline hover:decoration-lavender" + (h.depth == 3 ? " ml-3" : "");
							const href = "#" + h.slug;

							return (
								<li class={className}>
									<a href={href}>{h.text}</a>
								</li>
							);
						})}
					</ol>
				</nav>
			)
		}
		<div class="prose prose-catppuccin max-w-full text-justify">
			<Content />
		</div>
	</Fragment>
</PageLayout>
